#pragma once

/****************************************************************
 * Include
 ****************************************************************/
#include <d3d12.h>
#include <SimpleMath.h>
#include "define.h"
#include "ConstantBuffer.h"
#include "DescriptorManager.h"
#include "Input.h"


/****************************************************************
 * クラス
 ****************************************************************/
class DescriptorManager;
class Input;


/****************************************************************
 * using namespace
 ****************************************************************/
using namespace DirectX::SimpleMath;


/****************************************************************
 * Camera　行列
 ****************************************************************/
struct CameraView {

	DirectX::XMMATRIX View;  /* カメラ行列 */
};


/****************************************************************
 * Cameraクラス
 ****************************************************************/
class Camera {

private:

	Vector3 eyePos;     /* 視線の位置 */
	Vector3 targetPos;  /* 目標点の位置 */
	Vector3 upward;     /* カメラの上方向ベクトル */

	float fovY;         /* カメラの視野角 */
	float Clip_near;    /* クリップ距離（近）*/
	float Clip_far;     /* クリップ距離（遠）*/
	float aspect;       /* ウィンドウのアスペクト比 */

	ConstantBuffer      m_Transform[2];

public:

	Camera();

	~Camera();

	/****************************************************************
	 * 初期化
	 ****************************************************************/
	bool Init(ID3D12Device* pDevice, DescriptorManager* pHeap);



	/****************************************************************
	 * 終了処理
	 ****************************************************************/
	void Term();


	/****************************************************************
	 * 更新処理
	 ****************************************************************/
	void Update(Input* input);


	/****************************************************************
	 * GPUハンドルを取得
	 ****************************************************************/
	D3D12_GPU_VIRTUAL_ADDRESS GetVirtualAddress(size_t FrameIndex) const;


	/****************************************************************
	 * カメラ座標の取得
	 ****************************************************************/
	Vector3 GetEyePos() const;

	Vector3 GetTargetPos() const;

	Vector3 GetUpWard() const;

	/****************************************************************
	 * カメラの回転
	 ***************************************************************/
	void CameraRotateAxis(Vector3 axis, float radian);

	void CameraRotateY(float radian);

	void CameraTransition(Vector3 trans);

};

